{"version":3,"file":"static/js/847.d4df7daf.chunk.js","mappings":"kOAiDA,UAvCqB,WACnB,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OAFNF,EAAAC,KAAA,EAEbX,GAAa,GAAMU,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAoBZ,GAAS,KAAD,EAA7CQ,EAAQC,EAAAI,KACdlB,EAASa,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iBAGC,OAHDA,EAAAC,KAAA,GAGnBX,GAAa,GAAOU,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAT,EAAA,wBAEvB,kBATa,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWdf,GACF,GAAG,CAACH,KAGFmB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,IAETzB,IAAawB,EAAAA,EAAAA,KAACE,EAAAA,GAAM,IAEpB9B,IACCyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACC,KAAMhC,KACjB4B,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEC,UAAW,QACxBN,EAAAA,EAAAA,KAACO,EAAAA,GAAqB,KACtBP,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEG,aAAc,WAC3BR,EAAAA,EAAAA,KAACS,EAAAA,GAAM,SAKjB,C","sources":["pages/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieDetailsById } from 'utils/api';\nimport {\n  AdditionalInformation,\n  GoBackBtn,\n  Loader,\n  MovieCard,\n} from 'components';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieDetailsById(movieId);\n        setMovie(response);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackBtn />\n\n      {isLoading && <Loader />}\n\n      {movie && (\n        <>\n          <MovieCard data={movie} />\n          <hr style={{ marginTop: '0' }} />\n          <AdditionalInformation />\n          <hr style={{ marginBottom: '12px' }} />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMovieDetailsById","sent","t0","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","GoBackBtn","Loader","MovieCard","data","style","marginTop","AdditionalInformation","marginBottom","Outlet"],"sourceRoot":""}