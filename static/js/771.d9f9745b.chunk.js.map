{"version":3,"file":"static/js/771.d9f9745b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","pages/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'styles';\n\nexport const MovieListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 2px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.accent};\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieListItem } from './MoviesList.styled';\nimport { RiArrowRightSLine } from 'react-icons/ri';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {data.map(({ id, title }) => {\n        return (\n          <MovieListItem key={id}>\n            <RiArrowRightSLine />\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'styles';\n\nexport const SearchForm = styled.form`\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    border: 2px solid ${theme.colors.accent};\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  width: auto;\n  height: 30px;\n  padding: 0 10px;\n\n  /* border-radius: 2px; */\n  background-color: ${theme.colors.gray};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 16px;\n\n  font-style: normal;\n  font-weight: 500;\n\n  &:hover,\n  :focus {\n    background-color: ${theme.colors.accent};\n  }\n`;\n","import { Button, Input, SearchForm } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { value: query } = event.target.elements.search;\n\n    onSubmit(query);\n    event.target.reset();\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"search\" autoComplete=\"off\" />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { searchMoviesByQuery } from 'helpers/api';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      if (query === '') {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        setMovies([]);\n        const response = await searchMoviesByQuery(query);\n        setMovies(response.results);\n      } catch (error) {\n        throw Error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, [query]);\n\n  const updateSearchParams = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   const { value: query } = event.target.elements.search;\n\n  //   updateSearchParams(query);\n  //   event.target.reset();\n  // };\n\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"search\" autoComplete=\"off\" />\n        <button type=\"submit\">Search</button>\n      </form> */}\n      <Searchbar onSubmit={updateSearchParams} />\n\n      {isLoading && <Loader />}\n      {movies.length > 0 ? <MoviesList data={movies} /> : null}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieListItem","styled","_templateObject","_taggedTemplateLiteral","theme","MoviesList","_ref","data","location","useLocation","_jsx","children","map","_ref2","id","title","_jsxs","RiArrowRightSLine","Link","to","concat","state","from","SearchForm","Input","_templateObject2","Button","_templateObject3","Searchbar","onSubmit","event","preventDefault","query","target","elements","search","value","reset","type","name","autoComplete","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","abrupt","searchMoviesByQuery","sent","results","t0","Error","finish","stop","apply","arguments","Loader","length"],"sourceRoot":""}